package fr.tikione.jacocoverage.plugin.config;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;

final class JaCoCoveragePanel extends javax.swing.JPanel {
    private static final long serialVersionUID = 1L;

    private final JaCoCoverageOptionsPanelController controller;

    JaCoCoveragePanel(JaCoCoverageOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /** 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHighlightingCoveredCode = new JPanel();
        jLabelCoveredCodeBG = new JLabel();
        jLabelPartiallyCoveredCodeBG = new JLabel();
        jLabelNotCoveredCodeBG = new JLabel();
        jTextFieldCoveredR = new JTextField();
        jTextFieldCoveredG = new JTextField();
        jTextFieldCoveredB = new JTextField();
        jTextFieldPartiallyCoveredR = new JTextField();
        jTextFieldPartiallyCoveredG = new JTextField();
        jTextFieldPartiallyCoveredB = new JTextField();
        jTextFieldNotCoveredR = new JTextField();
        jTextFieldNotCoveredG = new JTextField();
        jTextFieldNotCoveredB = new JTextField();
        jTextFieldNotCoveredPreview = new JPanel();
        jTextFieldPartiallyCoveredPreview = new JPanel();
        jTextFieldCoveredPreview = new JPanel();
        jLabelInfoColorsAreRGB = new JLabel();
        jButtonResoreDefaults = new JButton();

        jPanelHighlightingCoveredCode.setBorder(BorderFactory.createTitledBorder(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jPanelHighlightingCoveredCode.border.title"))); // NOI18N

        Mnemonics.setLocalizedText(jLabelCoveredCodeBG, NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jLabelCoveredCodeBG.text")); // NOI18N

        Mnemonics.setLocalizedText(jLabelPartiallyCoveredCodeBG, NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jLabelPartiallyCoveredCodeBG.text")); // NOI18N

        Mnemonics.setLocalizedText(jLabelNotCoveredCodeBG, NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jLabelNotCoveredCodeBG.text")); // NOI18N

        jTextFieldCoveredR.setText(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jTextFieldCoveredR.text")); // NOI18N

        jTextFieldCoveredG.setText(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jTextFieldCoveredG.text")); // NOI18N

        jTextFieldCoveredB.setText(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jTextFieldCoveredB.text")); // NOI18N

        jTextFieldPartiallyCoveredR.setText(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jTextFieldPartiallyCoveredR.text")); // NOI18N

        jTextFieldPartiallyCoveredG.setText(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jTextFieldPartiallyCoveredG.text")); // NOI18N

        jTextFieldPartiallyCoveredB.setText(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jTextFieldPartiallyCoveredB.text")); // NOI18N

        jTextFieldNotCoveredR.setText(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jTextFieldNotCoveredR.text")); // NOI18N

        jTextFieldNotCoveredG.setText(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jTextFieldNotCoveredG.text")); // NOI18N

        jTextFieldNotCoveredB.setText(NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jTextFieldNotCoveredB.text")); // NOI18N

        jTextFieldNotCoveredPreview.setBackground(new Color(252, 201, 194));
        jTextFieldNotCoveredPreview.setMaximumSize(new Dimension(16, 16));
        jTextFieldNotCoveredPreview.setMinimumSize(new Dimension(16, 16));
        jTextFieldNotCoveredPreview.setName(""); // NOI18N

        GroupLayout jTextFieldNotCoveredPreviewLayout = new GroupLayout(jTextFieldNotCoveredPreview);
        jTextFieldNotCoveredPreview.setLayout(jTextFieldNotCoveredPreviewLayout);
        jTextFieldNotCoveredPreviewLayout.setHorizontalGroup(
            jTextFieldNotCoveredPreviewLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );
        jTextFieldNotCoveredPreviewLayout.setVerticalGroup(
            jTextFieldNotCoveredPreviewLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        jTextFieldPartiallyCoveredPreview.setBackground(new Color(255, 231, 157));
        jTextFieldPartiallyCoveredPreview.setMaximumSize(new Dimension(16, 16));
        jTextFieldPartiallyCoveredPreview.setMinimumSize(new Dimension(16, 16));
        jTextFieldPartiallyCoveredPreview.setName(""); // NOI18N

        GroupLayout jTextFieldPartiallyCoveredPreviewLayout = new GroupLayout(jTextFieldPartiallyCoveredPreview);
        jTextFieldPartiallyCoveredPreview.setLayout(jTextFieldPartiallyCoveredPreviewLayout);
        jTextFieldPartiallyCoveredPreviewLayout.setHorizontalGroup(
            jTextFieldPartiallyCoveredPreviewLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );
        jTextFieldPartiallyCoveredPreviewLayout.setVerticalGroup(
            jTextFieldPartiallyCoveredPreviewLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        jTextFieldCoveredPreview.setBackground(new Color(205, 235, 175));
        jTextFieldCoveredPreview.setMaximumSize(new Dimension(16, 16));
        jTextFieldCoveredPreview.setMinimumSize(new Dimension(16, 16));
        jTextFieldCoveredPreview.setName(""); // NOI18N

        GroupLayout jTextFieldCoveredPreviewLayout = new GroupLayout(jTextFieldCoveredPreview);
        jTextFieldCoveredPreview.setLayout(jTextFieldCoveredPreviewLayout);
        jTextFieldCoveredPreviewLayout.setHorizontalGroup(
            jTextFieldCoveredPreviewLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );
        jTextFieldCoveredPreviewLayout.setVerticalGroup(
            jTextFieldCoveredPreviewLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        jLabelInfoColorsAreRGB.setFont(new Font("Tahoma", 2, 11)); // NOI18N
        Mnemonics.setLocalizedText(jLabelInfoColorsAreRGB, NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jLabelInfoColorsAreRGB.text")); // NOI18N

        GroupLayout jPanelHighlightingCoveredCodeLayout = new GroupLayout(jPanelHighlightingCoveredCode);
        jPanelHighlightingCoveredCode.setLayout(jPanelHighlightingCoveredCodeLayout);
        jPanelHighlightingCoveredCodeLayout.setHorizontalGroup(
            jPanelHighlightingCoveredCodeLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHighlightingCoveredCodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHighlightingCoveredCodeLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelHighlightingCoveredCodeLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabelPartiallyCoveredCodeBG)
                        .addComponent(jLabelNotCoveredCodeBG))
                    .addComponent(jLabelCoveredCodeBG, GroupLayout.PREFERRED_SIZE, 224, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHighlightingCoveredCodeLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHighlightingCoveredCodeLayout.createSequentialGroup()
                        .addComponent(jTextFieldCoveredR, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCoveredG, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCoveredB, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCoveredPreview, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelHighlightingCoveredCodeLayout.createSequentialGroup()
                        .addComponent(jTextFieldPartiallyCoveredR, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPartiallyCoveredG, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPartiallyCoveredB, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPartiallyCoveredPreview, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelHighlightingCoveredCodeLayout.createSequentialGroup()
                        .addComponent(jTextFieldNotCoveredR, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNotCoveredG, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNotCoveredB, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNotCoveredPreview, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelHighlightingCoveredCodeLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabelInfoColorsAreRGB)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanelHighlightingCoveredCodeLayout.setVerticalGroup(
            jPanelHighlightingCoveredCodeLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHighlightingCoveredCodeLayout.createSequentialGroup()
                .addComponent(jLabelInfoColorsAreRGB)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelHighlightingCoveredCodeLayout.createParallelGroup(GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelCoveredCodeBG, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCoveredR, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCoveredG, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCoveredB, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCoveredPreview, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelHighlightingCoveredCodeLayout.createParallelGroup(GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelPartiallyCoveredCodeBG, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPartiallyCoveredR, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPartiallyCoveredG, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPartiallyCoveredB, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPartiallyCoveredPreview, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelHighlightingCoveredCodeLayout.createParallelGroup(GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelNotCoveredCodeBG, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNotCoveredR, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNotCoveredG, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNotCoveredB, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNotCoveredPreview, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(0, 16, Short.MAX_VALUE))
        );

        Mnemonics.setLocalizedText(jButtonResoreDefaults, NbBundle.getMessage(JaCoCoveragePanel.class, "JaCoCoveragePanel.jButtonResoreDefaults.text")); // NOI18N

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelHighlightingCoveredCode, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonResoreDefaults)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelHighlightingCoveredCode, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jButtonResoreDefaults)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(JaCoCoveragePanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(JaCoCoveragePanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(JaCoCoveragePanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(JaCoCoveragePanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton jButtonResoreDefaults;
    private JLabel jLabelCoveredCodeBG;
    private JLabel jLabelInfoColorsAreRGB;
    private JLabel jLabelNotCoveredCodeBG;
    private JLabel jLabelPartiallyCoveredCodeBG;
    private JPanel jPanelHighlightingCoveredCode;
    private JTextField jTextFieldCoveredB;
    private JTextField jTextFieldCoveredG;
    private JPanel jTextFieldCoveredPreview;
    private JTextField jTextFieldCoveredR;
    private JTextField jTextFieldNotCoveredB;
    private JTextField jTextFieldNotCoveredG;
    private JPanel jTextFieldNotCoveredPreview;
    private JTextField jTextFieldNotCoveredR;
    private JTextField jTextFieldPartiallyCoveredB;
    private JTextField jTextFieldPartiallyCoveredG;
    private JPanel jTextFieldPartiallyCoveredPreview;
    private JTextField jTextFieldPartiallyCoveredR;
    // End of variables declaration//GEN-END:variables
}
